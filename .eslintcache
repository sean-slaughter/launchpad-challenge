[{"/home/sean/launchpad-challenge/src/index.js":"1","/home/sean/launchpad-challenge/src/App.js":"2","/home/sean/launchpad-challenge/src/reportWebVitals.js":"3","/home/sean/launchpad-challenge/src/data/reposData.js":"4","/home/sean/launchpad-challenge/src/components/containers/MainContainer.js":"5","/home/sean/launchpad-challenge/src/components/containers/SideNav.js":"6","/home/sean/launchpad-challenge/src/Routes.js":"7","/home/sean/launchpad-challenge/src/components/containers/Home.js":"8","/home/sean/launchpad-challenge/src/components/repos/charts/WeeklyChart.js":"9","/home/sean/launchpad-challenge/src/components/repos/charts/YearlyChart.js":"10","/home/sean/launchpad-challenge/src/components/repos/containers/Compare.js":"11","/home/sean/launchpad-challenge/src/components/repos/containers/Repo.js":"12","/home/sean/launchpad-challenge/src/components/repos/containers/YearlyCommits.js":"13","/home/sean/launchpad-challenge/src/components/repos/containers/WeeklyCommits.js":"14","/home/sean/launchpad-challenge/src/components/repos/containers/Stars.js":"15","/home/sean/launchpad-challenge/src/components/repos/containers/OpenIssues.js":"16","/home/sean/launchpad-challenge/src/components/repos/charts/CompareWeeklyChart.js":"17","/home/sean/launchpad-challenge/src/components/repos/charts/CompareYearlyChart.js":"18","/home/sean/launchpad-challenge/src/components/repos/charts/StarsChart.js":"19","/home/sean/launchpad-challenge/src/components/repos/charts/OpenIssuesChart.js":"20"},{"size":639,"mtime":1611530590601,"results":"21","hashOfConfig":"22"},{"size":438,"mtime":1611536374891,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1611250026249,"results":"24","hashOfConfig":"22"},{"size":926,"mtime":1611355792461,"results":"25","hashOfConfig":"22"},{"size":584,"mtime":1611532476192,"results":"26","hashOfConfig":"22"},{"size":2180,"mtime":1611532542879,"results":"27","hashOfConfig":"22"},{"size":687,"mtime":1611429361082,"results":"28","hashOfConfig":"22"},{"size":1225,"mtime":1611594658198,"results":"29","hashOfConfig":"22"},{"size":1137,"mtime":1611536507103,"results":"30","hashOfConfig":"22"},{"size":1012,"mtime":1611532381137,"results":"31","hashOfConfig":"22"},{"size":3089,"mtime":1611595529329,"results":"32","hashOfConfig":"22"},{"size":4086,"mtime":1611595504169,"results":"33","hashOfConfig":"22"},{"size":612,"mtime":1611536564127,"results":"34","hashOfConfig":"22"},{"size":612,"mtime":1611536365503,"results":"35","hashOfConfig":"22"},{"size":561,"mtime":1611536360887,"results":"36","hashOfConfig":"22"},{"size":605,"mtime":1611536370135,"results":"37","hashOfConfig":"22"},{"size":1458,"mtime":1611538702075,"results":"38","hashOfConfig":"22"},{"size":1462,"mtime":1611588525132,"results":"39","hashOfConfig":"22"},{"size":991,"mtime":1611536527619,"results":"40","hashOfConfig":"22"},{"size":1018,"mtime":1611538691611,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"9wnjjx",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"/home/sean/launchpad-challenge/src/index.js",["86","87"],"import { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["88","89"],"/home/sean/launchpad-challenge/src/App.js",[],"/home/sean/launchpad-challenge/src/reportWebVitals.js",[],"/home/sean/launchpad-challenge/src/data/reposData.js",[],"/home/sean/launchpad-challenge/src/components/containers/MainContainer.js",[],"/home/sean/launchpad-challenge/src/components/containers/SideNav.js",[],"/home/sean/launchpad-challenge/src/Routes.js",[],"/home/sean/launchpad-challenge/src/components/containers/Home.js",[],"/home/sean/launchpad-challenge/src/components/repos/charts/WeeklyChart.js",[],"/home/sean/launchpad-challenge/src/components/repos/charts/YearlyChart.js",[],"/home/sean/launchpad-challenge/src/components/repos/containers/Compare.js",["90","91"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport reposData from \"../../../data/reposData\";\nimport StarsChart from \"../charts/StarsChart\";\nimport CompareWeeklyChart from \"../charts/CompareWeeklyChart\";\nimport { CircularProgress, Grid, makeStyles } from \"@material-ui/core\";\nimport CompareYearlyChart from \"../charts/CompareYearlyChart\";\nimport OpenIssuesChart from \"../charts/OpenIssuesChart\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 50,\n    marginLeft: -50\n  },\n  title: {\n    margin: 20,\n    fontSize: 100,\n    color: \"#f3f3f4\"\n  },\n  loading: {\n    marginTop: \"40vh\"\n  }\n})\n\nconst Compare = () => {\n\n  const classes = useStyles();\n\n  const [commitsData, setCommitsData] = useState({});\n  const [starsAndIssuesData, setStarsAndIssuesData] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  //fetch GitHub API data for all repositories\n  const fetchApiData = async () => {\n\n    const commitURL = \"/stats/commit_activity\";\n    const starsAndIssues = {};\n    const commits = {};\n\n    for(let i = 0; i < reposData.length; i++){\n      const {name, github_url} = reposData[i];\n      const resp1 = await axios.get(github_url + commitURL);\n      const resp2 = await axios.get(github_url);\n      commits[name] = resp1.data;\n      starsAndIssues[name] = resp2.data;\n    }\n    \n    return [commits, starsAndIssues]\n  };\n\n  //set component state with GitHub API data\n  const setStateWithApiData = async () => {\n    const data = await fetchApiData();\n    setCommitsData(data[0]);\n    setStarsAndIssuesData(data[1]);\n    setLoading(false);\n  };\n\n//set state when component mounts\n  useEffect(() => {\n    setStateWithApiData();\n  }, []);\n\n  //set interval to keep reloading api data\n  useEffect(() => {\n    const id = setInterval(setStateWithApiData, 10000);\n    return () => clearInterval(id)\n  },[loading]);\n\n//only render charts if data is loaded\n  const renderData = () => {\n      \n      if(!loading){\n          return (\n            <Grid className={classes.root}container justify=\"center\" alignItems=\"center\" spacing={3}>\n              <Grid item sm={12}>\n                <h1 className={classes.title}>Compare Framework Data</h1>\n              </Grid>\n              <Grid item sm={12}>\n                <CompareYearlyChart data={commitsData}/>\n              </Grid>\n              <Grid item sm={4}>\n                <CompareWeeklyChart data={commitsData}/>\n              </Grid>\n              <Grid item sm={4}>\n                <StarsChart data={starsAndIssuesData}/>\n              </Grid>\n              <Grid item sm={4}>\n                <OpenIssuesChart data={starsAndIssuesData}/>\n              </Grid>\n            </Grid>\n          )\n      }\n      else return (\n        //loading circle\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n              <Grid className={classes.loading} item xs={12}>\n                <CircularProgress size={100} color=\"primary\"/>\n              </Grid>\n        </Grid>\n    )\n  } \n\n  return (\n    <div>\n        {renderData()}\n    </div>\n);\n};\n\nexport default Compare;\n","/home/sean/launchpad-challenge/src/components/repos/containers/Repo.js",["92","93","94"],"import React, { useEffect, useState, useRef } from \"react\";\nimport WeeklyChart from \"../charts/WeeklyChart\";\nimport axios from \"axios\";\nimport YearlyChart from \"../charts/YearlyChart\";\nimport WeeklyCommits from \"./WeeklyCommits\";\nimport { CircularProgress, Grid, Icon, makeStyles } from \"@material-ui/core\";\nimport YearlyCommits from \"./YearlyCommits\";\nimport OpenIssues from \"./OpenIssues\";\nimport Stars from \"./Stars\";\n\nconst useStyles = makeStyles({\n  chart: {\n    marginBottom: 20,\n  },\n  card: {\n    marginBottom: 20,\n  },\n  icon: {\n    margin: 20,\n    fontSize: 150,\n    color: \"#e0e1dd\",\n  },\n  title: {\n    margin: 20,\n    fontSize: 150,\n    color: \"#e0e1dd\",\n  },\n  loading: {\n    marginTop: \"40vh\"\n  }\n});\n\nconst Repo = ({ repo }) => {\n  const classes = useStyles();\n\n  const [weeklyCommits, setWeeklyCommits] = useState(0);\n  const [yearlyCommitsData, setYearlyCommitsData] = useState(null);\n  const [totalYearlyCommits, setTotalYearlyCommits] = useState(0);\n  const [issues, setIssues] = useState(0);\n  const [stars, setStars] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  //fetch data from Github API\n  const fetchRepoData = async () => {\n    const commitURL = \"/stats/commit_activity\";\n    const resp1 = await axios.get(repo.github_url + commitURL);\n    const resp2 = await axios.get(repo.github_url);\n    return [resp1.data, resp2.data];\n  };\n\n  //set component state with api data\n  const setStateWithApiData = async () => {\n    console.log(\"inside setstatewithapidata\");\n    const data = await fetchRepoData();\n    setYearlyCommitsData(data[0]);\n    setTotalYearlyCommits(getTotal(data[0]));\n    setWeeklyCommits(data[0][0]);\n    setStars(data[1].stargazers_count);\n    setIssues(data[1].open_issues_count);\n    setLoading(false);\n  };\n\n  //get total number of yearly commits\n  const getTotal = (data) => {\n    return data.reduce((acc, curr) => {\n      return acc + curr.total;\n    }, 0);\n  };\n\n  //fetch repo data after component mount\n  useEffect(() => {\n    setStateWithApiData();\n  }, []);\n\n  //set interval to keep reloading api data\n  useEffect(() => {\n    const id = setInterval(setStateWithApiData, 10000);\n    return () => clearInterval(id);\n  }, [loading]);\n\n  //only render charts if data is loaded\n  const renderRepoData = () => {\n    if (!loading) {\n      return (\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={3}>\n          <Grid item xs={2}>\n            <Icon className={classes.icon}>{repo.icon}</Icon>\n          </Grid>\n          <Grid item xs={8}>\n            <h1 className={classes.title}>{repo.name}</h1>\n          </Grid>\n          <Grid container item direction=\"column\" xs={6}>\n            <Grid item xs={12} className={classes.chart}>\n              <WeeklyChart data={weeklyCommits.days} />\n            </Grid>\n            <Grid item xs={12} className={classes.chart}>\n              <YearlyChart data={yearlyCommitsData} />\n            </Grid>\n          </Grid>\n          <Grid container item direction=\"column\" xs={6}>\n            <Grid item xs={12} className={classes.card}>\n              <WeeklyCommits\n                className={classes.card}\n                data={weeklyCommits.total}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.card}>\n              <YearlyCommits\n                className={classes.card}\n                data={totalYearlyCommits}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.card}>\n              <OpenIssues className={classes.card} data={issues} />\n            </Grid>\n            <Grid item xs={12} className={classes.card}>\n              <Stars className={classes.card} data={stars} />\n            </Grid>\n          </Grid>\n        </Grid>\n      );\n    } else\n      return (\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid className={classes.loading} item xs={12}>\n              <CircularProgress size={100} color=\"primary\" />\n            </Grid>\n        </Grid>\n      );\n  };\n  return <div>{renderRepoData()}</div>;\n};\n\nexport default Repo;\n","/home/sean/launchpad-challenge/src/components/repos/containers/YearlyCommits.js",[],"/home/sean/launchpad-challenge/src/components/repos/containers/WeeklyCommits.js",[],"/home/sean/launchpad-challenge/src/components/repos/containers/Stars.js",[],"/home/sean/launchpad-challenge/src/components/repos/containers/OpenIssues.js",[],"/home/sean/launchpad-challenge/src/components/repos/charts/CompareWeeklyChart.js",[],"/home/sean/launchpad-challenge/src/components/repos/charts/CompareYearlyChart.js",[],"/home/sean/launchpad-challenge/src/components/repos/charts/StarsChart.js",[],"/home/sean/launchpad-challenge/src/components/repos/charts/OpenIssuesChart.js",[],{"ruleId":"95","severity":1,"message":"96","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":24},{"ruleId":"95","severity":1,"message":"99","line":1,"column":26,"nodeType":"97","messageId":"98","endLine":1,"endColumn":39},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":62,"column":6,"nodeType":"106","endLine":62,"endColumn":8,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"105","line":68,"column":5,"nodeType":"106","endLine":68,"endColumn":14,"suggestions":"108"},{"ruleId":"95","severity":1,"message":"109","line":1,"column":38,"nodeType":"97","messageId":"98","endLine":1,"endColumn":44},{"ruleId":"104","severity":1,"message":"105","line":73,"column":6,"nodeType":"106","endLine":73,"endColumn":8,"suggestions":"110"},{"ruleId":"104","severity":1,"message":"105","line":79,"column":6,"nodeType":"106","endLine":79,"endColumn":15,"suggestions":"111"},"no-unused-vars","'createMuiTheme' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setStateWithApiData'. Either include it or remove the dependency array.","ArrayExpression",["114"],["115"],"'useRef' is defined but never used.",["116"],["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"118","fix":"122"},{"desc":"120","fix":"123"},"Update the dependencies array to be: [setStateWithApiData]",{"range":"124","text":"125"},"Update the dependencies array to be: [loading, setStateWithApiData]",{"range":"126","text":"127"},{"range":"128","text":"125"},{"range":"129","text":"127"},[1689,1691],"[setStateWithApiData]",[1854,1863],"[loading, setStateWithApiData]",[2026,2028],[2193,2202]]